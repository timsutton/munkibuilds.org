<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Munki from GitHub.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>20</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/munki/munki</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PruneStaleBranch/>
      <hudson.plugins.git.extensions.impl.PathRestriction>
        <includedRegions></includedRegions>
        <excludedRegions>tests/*</excludedRegions>
      </hudson.plugins.git.extensions.impl.PathRestriction>
    </extensions>
  </scm>
  <assignedNode>elcap</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/3 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/sh -eux

PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/git/bin
APPNAME=munkitools
BUILDDIR=&quot;$WORKSPACE/build&quot;
BUILDLOG=&quot;$BUILDDIR/build.log&quot;
CHANGESFILE=&quot;$BUILDDIR/changes.txt&quot;
README=&quot;$BUILDDIR/README.html&quot;
GIT=/usr/bin/git
HDIUTIL=/usr/bin/hdiutil
LASTHASH=$($GIT rev-parse HEAD)

rm -rf &quot;$BUILDDIR&quot;
mkdir &quot;$BUILDDIR&quot;

$GIT show &gt; &quot;$CHANGESFILE&quot;

# Set up the readme for the fancy index
echo &quot;&lt;br&gt;&quot; &gt; &quot;$README&quot;

$GIT log --date=short --format=format:&quot;%an - %ad&lt;br&gt;&lt;br&gt;%s&lt;br&gt;%b&quot; -n 1 &gt;&gt; &quot;$README&quot;
echo &quot;&lt;br&gt;&lt;br&gt;&quot; &gt;&gt; &quot;$README&quot;
echo &quot;More details: &lt;a href=\&quot;https://github.com/munki/munki/commit/$LASTHASH\&quot;&gt;$LASTHASH&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot; &gt;&gt; &quot;$README&quot;

sudo xcode-select -s /Applications/Xcode.app

# Run the munki build script
sudo code/tools/make_munki_mpkg.sh -o &quot;$BUILDDIR&quot; 2&gt;&amp;1 | tee &quot;$BUILDLOG&quot;

# More Readme stuff
echo &quot;Munki component versions:&lt;br&gt;&lt;br&gt;&quot; &gt;&gt; &quot;$README&quot;
# Grep the build log for the component versions packaged, dump them into the Index readme
grep &quot;Packaging&quot; &quot;$BUILDLOG&quot; | cut -d &apos; &apos; -f2 | sed -e &apos;s/munkitools_//g&apos; -e &apos;s/\.pkg//g&apos; -e &apos;s/-/\: /g&apos; -e &apos;s/$/\&lt;br\&gt;/g&apos; &gt;&gt; &quot;$README&quot;

# We need to clean this ourselves because the sudo build creates files owned by root
sudo rm -Rf code


# Store info about the built package
PKGVERSION=$(grep &quot;metapackage version&quot; &quot;$BUILDLOG&quot; | awk &apos;{print $3}&apos;)
BUILT_PKG_NAME=&quot;$APPNAME-$PKGVERSION.pkg&quot;
BUILT_PKG_PATH=&quot;$BUILDDIR/$BUILT_PKG_NAME&quot;


# Determine output directories for publishing alternate branches via SSH
if [ &quot;$GIT_BRANCH&quot; != &quot;origin/master&quot; ]; then
  branch=$(echo &quot;$GIT_BRANCH&quot; | awk -F&apos;/&apos; &apos;{print $2}&apos;)
else
  branch=master
fi

if [ &quot;$branch&quot; = &quot;master&quot; ]; then
  SSH_TARGET_DIR=$PKGVERSION
else
  SSH_TARGET_DIR=&quot;_branches/$branch/$PKGVERSION&quot;
fi


# Store stuff in properties
cat &gt; build.properties &lt;&lt; EOF
PKGVERSION=$PKGVERSION
APPNAME=$APPNAME
BUILDDIR=$BUILDDIR
BUILDLOG=$BUILDLOG
BUILT_PKG_NAME=$BUILT_PKG_NAME
SSH_TARGET_DIR=$SSH_TARGET_DIR
EOF

# Checksumming
MD5=$(md5 -q &quot;$BUILT_PKG_PATH&quot;)
echo &quot;$MD5&quot; &gt; &quot;$BUILDDIR/MD5&quot;
echo &quot;&lt;br&gt;&lt;br&gt;MD5: $MD5&quot; &gt;&gt; &quot;$README&quot;

# Chown back to jenkins user so it can clean itself
sudo chown -R &quot;$USER&quot; &quot;$WORKSPACE&quot;
</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.1">
      <info>
        <propertiesFilePath>build.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>README=&quot;$BUILDDIR/README&quot;
VERINFO=&quot;$BUILDDIR/verinfo&quot;

echo &quot;&lt;html&gt;&quot; &gt; &quot;$README&quot;
echo &quot;&lt;body&gt;&quot; &gt;&gt; &quot;$README&quot;
grep &quot;version: [0-9]&quot; &quot;$BUILDLOG&quot; &gt; &quot;$VERINFO&quot;
cat &quot;$VERINFO&quot; &gt;&gt; &quot;$README&quot;
echo &quot;&lt;/body&gt;&quot; &gt;&gt; &quot;$README&quot;
echo &quot;&lt;/html&gt;&quot; &gt;&gt; &quot;$README&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build/*.pkg, build/*.log, build/*.txt, build/*.html, build/MD5</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin plugin="publish-over-ssh@1.17">
      <consolePrefix>SSH: </consolePrefix>
      <delegate>
        <publishers>
          <jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <configName>munkibuilds.org</configName>
            <verbose>false</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory>$SSH_TARGET_DIR</remoteDirectory>
                <sourceFiles>build/*.pkg, build/*.log, build/*.txt, build/*.html, build/MD5</sourceFiles>
                <excludes></excludes>
                <removePrefix>build</removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand>if [ $GIT_BRANCH = &quot;origin/master&quot; ]; then cd /var/www/munkibuilds.org; ln -f -s $SSH_TARGET_DIR/$BUILT_PKG_NAME munkitools3-latest.pkg; fi</execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
                <useAgentForwarding>false</useAgentForwarding>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
          </jenkins.plugins.publish__over__ssh.BapSshPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>true</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>.*</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>true</RunIfJobSuccessful>
          <script>#!/bin/sh&#xd;
&#xd;
curl -X POST \&#xd;
--data-urlencode &apos;payload={&quot;text&quot;: &quot;New Munki build: https://munkibuilds.org/&apos;${SSH_TARGET_DIR}&apos;&quot;, &quot;channel&quot;: &quot;#munki&quot;, &quot;username&quot;: &quot;munkibuilds&quot;}&apos; \&#xd;
https://hooks.slack.com/services/XXXXX/XXXXX/sekrit&#xd;
</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57.2">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>text/plain</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>https://munkibuilds.org/${PKGVERSION}

${JENKINS_URL}

${CHANGES}
</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers/>
</project>